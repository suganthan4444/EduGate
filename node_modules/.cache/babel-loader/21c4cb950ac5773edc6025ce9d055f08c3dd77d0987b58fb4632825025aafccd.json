{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sugu\\\\Code\\\\Projects\\\\Project EduGate\\\\react-project\\\\src\\\\LearnerProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './LearnerProfile.css';\nimport api from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LearnerProfile() {\n  _s();\n  const [learnerData, setLearnerData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editableFields, setEditableFields] = useState(false);\n  const [updatedFields, setUpdatedFields] = useState({});\n  const [csrfToken, setCsrfToken] = useState('');\n  useEffect(() => {\n    async function fetchCsrfToken() {\n      try {\n        const response = await api.get('/get-learner-csrf-token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n        // Handle error if unable to fetch CSRF token\n      }\n    }\n    fetchCsrfToken();\n  }, []);\n  useEffect(() => {\n    async function fetchProfileData() {\n      try {\n        const learnerId = sessionStorage.getItem('learnerId');\n        const response = await api.get(`/learner-profile/?learnerId=${learnerId}`, {\n          headers: {\n            'X-CSRFToken': csrfToken\n          }\n        });\n        setLearnerData(response.data);\n        setUpdatedFields(response.data);\n      } catch (err) {\n        setError('Failed to fetch profile data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchProfileData();\n  }, [csrfToken]);\n  const handleEdit = () => {\n    setEditableFields(true);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedFields({\n      ...updatedFields,\n      [name]: value\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      const learnerId = sessionStorage.getItem('learnerId');\n      await api.patch(`/update-learner-profile/${learnerId}`, updatedFields, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      setLearnerData(updatedFields);\n      setEditableFields(false);\n    } catch (err) {\n      console.error('Error updating profile:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), Object.entries(learnerData).map(([key, value]) => {\n      if (key === 'name' || key === 'dob') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: key.replace('_', ' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: value,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: key.replace('_', ' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), editableFields ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: key,\n            value: updatedFields[key] || value,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: value,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this);\n      }\n    }), editableFields && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 32\n    }, this), !editableFields && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(LearnerProfile, \"Y7FnmJrZDC0rxwej0tNJHByXbNs=\");\n_c = LearnerProfile;\nexport default LearnerProfile;\nvar _c;\n$RefreshReg$(_c, \"LearnerProfile\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","LearnerProfile","_s","learnerData","setLearnerData","loading","setLoading","error","setError","editableFields","setEditableFields","updatedFields","setUpdatedFields","csrfToken","setCsrfToken","fetchCsrfToken","response","get","data","console","fetchProfileData","learnerId","sessionStorage","getItem","headers","err","handleEdit","handleChange","e","name","value","target","handleSubmit","patch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","map","key","replace","type","readOnly","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Sugu/Code/Projects/Project EduGate/react-project/src/LearnerProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './LearnerProfile.css';\r\nimport api from './api';\r\n\r\nfunction LearnerProfile() {\r\n    const [learnerData, setLearnerData] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [editableFields, setEditableFields] = useState(false);\r\n    const [updatedFields, setUpdatedFields] = useState({});\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchCsrfToken() {\r\n            try {\r\n                const response = await api.get('/get-learner-csrf-token/');\r\n                setCsrfToken(response.data.csrfToken);\r\n            } catch (error) {\r\n                console.error('Error fetching CSRF token:', error);\r\n                // Handle error if unable to fetch CSRF token\r\n            }\r\n        }\r\n\r\n        fetchCsrfToken();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchProfileData() {\r\n            try {\r\n                const learnerId = sessionStorage.getItem('learnerId');\r\n                const response = await api.get(`/learner-profile/?learnerId=${learnerId}`,{headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                }});\r\n                setLearnerData(response.data);\r\n                setUpdatedFields(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch profile data. Please try again.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchProfileData();\r\n    }, [csrfToken]);\r\n\r\n    const handleEdit = () => {\r\n        setEditableFields(true);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedFields({ ...updatedFields, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const learnerId = sessionStorage.getItem('learnerId');\r\n            await api.patch(`/update-learner-profile/${learnerId}`, updatedFields, {\r\n                headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                },\r\n            });\r\n            setLearnerData(updatedFields);\r\n            setEditableFields(false);\r\n        } catch (err) {\r\n            console.error('Error updating profile:', err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <h2>My Profile</h2>\r\n            {Object.entries(learnerData).map(([key, value]) => {\r\n                if (key === 'name' || key === 'dob') {\r\n                    return (\r\n                        <div key={key} className=\"profile-field\">\r\n                            <label>{key.replace('_', ' ')}</label>\r\n                            <input type=\"text\" value={value} readOnly />\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div key={key} className=\"profile-field\">\r\n                            <label>{key.replace('_', ' ')}</label>\r\n                            {editableFields ? (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name={key}\r\n                                    value={updatedFields[key] || value}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <input type=\"text\" value={value} readOnly />\r\n                            )}\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n            {editableFields && <button onClick={handleSubmit}>Submit Changes</button>}\r\n            {!editableFields && <button onClick={handleEdit}>Edit Profile</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LearnerProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}