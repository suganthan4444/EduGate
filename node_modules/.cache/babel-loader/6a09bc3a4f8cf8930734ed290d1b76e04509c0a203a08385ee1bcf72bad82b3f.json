{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sugu\\\\Code\\\\Projects\\\\Project EduGate\\\\react-project\\\\src\\\\AuthenticatedRoute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticatedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // Check if the user is authenticated\n  const isAuthenticated = sessionStorage.getItem('authenticated') === 'true';\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this) :\n    /*#__PURE__*/\n    // Redirect to login if not authenticated\n    _jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\nvar _c;\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","AuthenticatedRoute","component","Component","rest","isAuthenticated","sessionStorage","getItem","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/Sugu/Code/Projects/Project EduGate/react-project/src/AuthenticatedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n  // Check if the user is authenticated\r\n  const isAuthenticated = sessionStorage.getItem('authenticated') === 'true';\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          // Redirect to login if not authenticated\r\n          <Navigate to=\"/login\" replace />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthenticatedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAChE;EACA,MAAMC,eAAe,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,KAAK,MAAM;EAE1E,oBACEP,OAAA,CAACH,KAAK;IAAA,GACAO,IAAI;IACRI,MAAM,EAAGC,KAAK,IACZJ,eAAe,gBACbL,OAAA,CAACG,SAAS;MAAA,GAAKM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IAAA;IAExB;IACAb,OAAA,CAACF,QAAQ;MAACgB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAElC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACG,EAAA,GAjBIf,kBAAkB;AAmBxB,eAAeA,kBAAkB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}