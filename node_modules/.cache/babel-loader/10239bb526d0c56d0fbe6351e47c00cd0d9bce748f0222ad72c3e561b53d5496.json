{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./LearnerSignUp.css';import api from'./api';import{debounce}from'lodash';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function LearnerSignUp(){const[formData,setFormData]=useState({name:'',dob:'',highest_qualification:'',email:'',mobile_no:'',username:'',password:'',profile_picture:''});const[otp,setOtp]=useState('');const[otpSent,setOtpSent]=useState(false);const[isOtpVerified,setIsOtpVerified]=useState(false);const[isLoading,setIsLoading]=useState(false);const[errorFields,setErrorFields]=useState({email:'',username:''});const[passwordErrors,setPasswordErrors]=useState([]);const[usernameAvailable,setUsernameAvailable]=useState(null);const[csrfToken,setCsrfToken]=useState('');useEffect(()=>{async function fetchCsrfToken(){try{const response=await api.get('/get-learner-csrf-token/');setCsrfToken(response.data.csrfToken);}catch(error){console.error('Error fetching CSRF token:',error);}}fetchCsrfToken();},[]);const debouncedCheckLearnerUsernameAvailability=debounce(async username=>{if(!username){setUsernameAvailable(null);setErrorFields(prevFields=>({...prevFields,username:'Username cannot be empty.'}));return;}try{const response=await api.post('/check-learner-username-availability/',{username,headers:{'X-CSRFToken':csrfToken}});const isUnique=response.data.username.is_unique;setUsernameAvailable(isUnique);if(isUnique){setErrorFields(prevFields=>({...prevFields,username:''}));}else{setErrorFields(prevFields=>({...prevFields,username:'Username is unavailable, please choose another username'}));}}catch(error){console.error('Error checking username:',error);setErrorFields(prevFields=>({...prevFields,username:'Error checking username. Please try again.'}));setUsernameAvailable(false);}},300);const debouncedCheckLearnerUniqueFields=debounce(async email=>{try{const response=await api.post('/check-learner-unique-fields/',email,{headers:{'X-CSRFToken':csrfToken}});if(!response.data.success){setErrorFields({email:response.data.message});}else{setErrorFields({});}if(response.data.success){try{const response=await api.post('/learner-send-otp/',{email},{headers:{'X-CSRFToken':csrfToken}});alert(response.data.message);setOtpSent(true);}catch(error){console.error('Error sending OTP:',error);alert('Failed to send OTP. Please try again.');}finally{setIsLoading(false);}}}catch(error){console.error('Error checking unique fields:',error);setErrorFields({email:'Error checking email. Please try again.'});}},300);function validatePassword(password){const minLength=8;const hasUppercase=/[A-Z]/.test(password);const hasLowercase=/[a-z]/.test(password);const hasSpecialCharacter=/[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);let errorMessages=[];if(password.length<minLength){errorMessages.push('Password must be at least 8 characters long.');}if(!hasUppercase){errorMessages.push('Password must contain at least one uppercase letter.');}if(!hasLowercase){errorMessages.push('Password must contain at least one lowercase letter.');}if(!hasSpecialCharacter){errorMessages.push('Password must contain at least one special character.');}return errorMessages;}const handleInputChange=e=>{const{name,value,type,files}=e.target;if(type==='file'){setFormData(prevFormData=>({...prevFormData,[name]:files[0]}));}else{setFormData(prevFormData=>({...prevFormData,[name]:value}));}if(name==='username'){debouncedCheckLearnerUsernameAvailability(value);}if(name==='password'){const errors=validatePassword(value);setPasswordErrors(errors);}};const handleSubmit=async e=>{e.preventDefault();setIsLoading(true);if(passwordErrors.length>0){alert('Please fix password errors before submitting.');return;}const{email}=formData;await debouncedCheckLearnerUniqueFields(email);};const handleOTPVerification=async e=>{e.preventDefault();setIsLoading(true);try{const response=await api.post('/learner-verify-otp/',{email:formData.email,otp:otp});if(response.data.success){setIsOtpVerified(true);alert('OTP verified successfully!');await handleLearnerSignup();}else{alert('Incorrect OTP. Please try again.');}}catch(error){console.error('Error verifying OTP:',error);alert('Error verifying OTP. Please try again.');}finally{setIsLoading(false);}};const handleResendOTP=async()=>{setIsLoading(true);try{const response=await api.post('/learner-send-otp/',{email:formData.email});alert(response.data.message);setOtpSent(true);setOtp('');}catch(error){console.error('Error sending OTP:',error);alert('Failed to send OTP. Please try again.');}finally{setIsLoading(false);}};const handleLearnerSignup=async()=>{try{const dataToSend={...formData,otp:otp};const response=await api.post('/learner-signup/',dataToSend,{headers:{'Content-Type':'multipart/form-data','X-CSRFToken':csrfToken}});if(response.status===201){alert('Learner signed up successfully!');}else{alert(`Error: ${response.data.message}`);}}catch(error){console.error('Error during signup:',error);alert('Error during signup. Please try again.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"learner-component-background\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container4\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Learner Sign Up\"}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),!isOtpVerified?/*#__PURE__*/_jsxs(_Fragment,{children:[otpSent?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleOTPVerification,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter OTP\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Verify OTP\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleResendOTP,children:\"Resend OTP\"})]}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"e.g. Thomas Alva Edison\",value:formData.name,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Date of Birth\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"dob\",value:formData.dob,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Profile Picture\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"profile_picture\",accept:\"image/*\",onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Highest Qualification\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"highest_qualification\",value:formData.highest_qualification,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select your qualification\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 1\",children:\"Grade 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 2\",children:\"Grade 2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 3\",children:\"Grade 3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 4\",children:\"Grade 4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 5\",children:\"Grade 5\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 6\",children:\"Grade 6\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 7\",children:\"Grade 7\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 8\",children:\"Grade 8\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 9\",children:\"Grade 9\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 10\",children:\"Grade 10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 11\",children:\"Grade 11\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Grade 12\",children:\"Grade 12\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.A.\",children:\"Bachelor of Arts (B.A.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Sc.\",children:\"Bachelor of Science (B.Sc.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Com\",children:\"Bachelor of Commerce (B.Com)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.E.\",children:\"Bachelor of Engineering (B.E.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Tech\",children:\"Bachelor of Technology (B.Tech)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Pharm\",children:\"Bachelor of Pharmacy (B.Pharm)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Arch\",children:\"Bachelor of Architecture (B.Arch)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BBA\",children:\"Bachelor of Business Administration (BBA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BCA\",children:\"Bachelor of Computer Applications (BCA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MBBS\",children:\"Bachelor of Medicine, Bachelor of Surgery (MBBS)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BDS\",children:\"Bachelor of Dental Surgery (BDS)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.V.Sc.\",children:\"Bachelor of Veterinary Science (B.V.Sc.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LL.B\",children:\"Bachelor of Laws (LL.B)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.A.\",children:\"Master of Arts (M.A.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Sc.\",children:\"Master of Science (M.Sc.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Com\",children:\"Master of Commerce (M.Com)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.E.\",children:\"Master of Engineering (M.E.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Tech\",children:\"Master of Technology (M.Tech)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MBA\",children:\"Master of Business Administration (MBA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MCA\",children:\"Master of Computer Applications (MCA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MD\",children:\"Doctor of Medicine (MD)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MS\",children:\"Master of Surgery (MS)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Pharm\",children:\"Master of Pharmacy (M.Pharm)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LL.M\",children:\"Master of Laws (LL.M)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ph.D\",children:\"Doctor of Philosophy (Ph.D)\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",value:formData.email,onChange:handleInputChange,onSubmit:handleSubmit,required:true}),errorFields.email&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errorFields.email}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Mobile No\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"mobile_no\",value:formData.mobile_no,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:formData.username,onChange:handleInputChange,required:true}),errorFields.username&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errorFields.username}),usernameAvailable&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:\"Username is available.\"}),usernameAvailable===false&&!errorFields.username&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"Username is unavailable.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,required:true}),passwordErrors.map((error,index)=>/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error},index)),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Sign Up\"})]}),/*#__PURE__*/_jsx(\"a\",{href:\"/learner-signin\",children:\"Already have an Account? Sign In\"})]}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"OTP verified successfully! Proceed with the next steps.\"})})]})});}export default LearnerSignUp;","map":{"version":3,"names":["React","useState","useEffect","api","debounce","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LearnerSignUp","formData","setFormData","name","dob","highest_qualification","email","mobile_no","username","password","profile_picture","otp","setOtp","otpSent","setOtpSent","isOtpVerified","setIsOtpVerified","isLoading","setIsLoading","errorFields","setErrorFields","passwordErrors","setPasswordErrors","usernameAvailable","setUsernameAvailable","csrfToken","setCsrfToken","fetchCsrfToken","response","get","data","error","console","debouncedCheckLearnerUsernameAvailability","prevFields","post","headers","isUnique","is_unique","debouncedCheckLearnerUniqueFields","success","message","alert","validatePassword","minLength","hasUppercase","test","hasLowercase","hasSpecialCharacter","errorMessages","length","push","handleInputChange","e","value","type","files","target","prevFormData","errors","handleSubmit","preventDefault","handleOTPVerification","handleLearnerSignup","handleResendOTP","dataToSend","status","className","children","onSubmit","onChange","required","onClick","placeholder","accept","disabled","style","color","map","index","href"],"sources":["D:/Sugu/Study Zone/Coding/Code/Projects/Coapps/Final Project/Project EduGate/react-project/src/LearnerSignUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LearnerSignUp.css';\r\nimport api from './api';\r\nimport { debounce } from 'lodash';\r\n\r\nfunction LearnerSignUp() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        dob: '',\r\n        highest_qualification: '',\r\n        email: '',\r\n        mobile_no: '',\r\n        username: '',\r\n        password: '',\r\n        profile_picture:'',\r\n    });\r\n\r\n    const [otp, setOtp] = useState('');\r\n    const [otpSent, setOtpSent] = useState(false);\r\n    const [isOtpVerified, setIsOtpVerified] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorFields, setErrorFields] = useState({\r\n        email: '',\r\n        username: '',\r\n    });\r\n    \r\n    const [passwordErrors, setPasswordErrors] = useState([]);\r\n    \r\n    const [usernameAvailable, setUsernameAvailable] = useState(null); \r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchCsrfToken() {\r\n            try {\r\n                const response = await api.get('/get-learner-csrf-token/');\r\n                setCsrfToken(response.data.csrfToken);\r\n            } catch (error) {\r\n                console.error('Error fetching CSRF token:', error);\r\n            }\r\n        }\r\n\r\n        fetchCsrfToken();\r\n    }, []);\r\n\r\n    const debouncedCheckLearnerUsernameAvailability = debounce(async (username) => {\r\n        if (!username) {\r\n            setUsernameAvailable(null);\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: 'Username cannot be empty.',\r\n            }));\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await api.post('/check-learner-username-availability/', {\r\n                username, headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                }\r\n            });\r\n    \r\n            const isUnique = response.data.username.is_unique;\r\n            setUsernameAvailable(isUnique);\r\n    \r\n            if (isUnique) {\r\n                setErrorFields((prevFields) => ({\r\n                    ...prevFields,\r\n                    username: '',\r\n                }));\r\n            } else {\r\n                setErrorFields((prevFields) => ({\r\n                    ...prevFields,\r\n                    username:'Username is unavailable, please choose another username',\r\n                }));\r\n            }\r\n        } catch (error) {\r\n    \r\n            console.error('Error checking username:', error);\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: 'Error checking username. Please try again.',\r\n            }));\r\n            setUsernameAvailable(false);\r\n        }\r\n    }, 300);\r\n\r\n    const debouncedCheckLearnerUniqueFields = debounce(async (email) => {\r\n        try {\r\n            const response = await api.post('/check-learner-unique-fields/', \r\n                email\r\n            ,{headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }}\r\n        );\r\n\r\n        if (!response.data.success) {    \r\n            setErrorFields({\r\n            email: response.data.message,\r\n            });  \r\n\r\n        }\r\n        else {\r\n            setErrorFields({});\r\n        }\r\n\r\n        if(response.data.success){\r\n\r\n            try {\r\n                const response = await api.post('/learner-send-otp/', { email },{headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                }});\r\n                alert(response.data.message);\r\n                setOtpSent(true);\r\n            } catch (error) {\r\n                console.error('Error sending OTP:', error);\r\n                alert('Failed to send OTP. Please try again.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }          \r\n        }\r\n\r\n\r\n    } catch (error) {\r\n        console.error('Error checking unique fields:', error);\r\n        setErrorFields({\r\n            email: 'Error checking email. Please try again.',\r\n        });\r\n    }\r\n}, 300);\r\n\r\n    function validatePassword(password) {\r\n        const minLength = 8;\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasSpecialCharacter = /[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);\r\n    \r\n        let errorMessages = [];\r\n    \r\n        if (password.length < minLength) {\r\n            errorMessages.push('Password must be at least 8 characters long.');\r\n        }\r\n        if (!hasUppercase) {\r\n            errorMessages.push('Password must contain at least one uppercase letter.');\r\n        }\r\n        if (!hasLowercase) {\r\n            errorMessages.push('Password must contain at least one lowercase letter.');\r\n        }\r\n        if (!hasSpecialCharacter) {\r\n            errorMessages.push('Password must contain at least one special character.');\r\n        }\r\n    \r\n        return errorMessages;\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type, files } = e.target;\r\n        if (type === 'file') {\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [name]: files[0],\r\n            }));\r\n        } else {\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [name]: value,\r\n            }));\r\n        }\r\n\r\n        if (name === 'username') {\r\n            debouncedCheckLearnerUsernameAvailability(value);\r\n        }\r\n\r\n        if (name === 'password') {\r\n            const errors = validatePassword(value);\r\n            setPasswordErrors(errors);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        setIsLoading(true);\r\n\r\n        if (passwordErrors.length > 0) {\r\n            alert('Please fix password errors before submitting.');\r\n            return;\r\n        }\r\n    \r\n\r\n        const { email} = formData;\r\n    \r\n\r\n        await debouncedCheckLearnerUniqueFields(email);\r\n\r\n    };\r\n\r\n    const handleOTPVerification = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await api.post('/learner-verify-otp/', {\r\n                email: formData.email,\r\n                otp: otp,\r\n            });\r\n\r\n            if (response.data.success) {\r\n                setIsOtpVerified(true);\r\n                alert('OTP verified successfully!');\r\n                await handleLearnerSignup();\r\n            } else {\r\n                alert('Incorrect OTP. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error verifying OTP:', error);\r\n            alert('Error verifying OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await api.post('/learner-send-otp/', {\r\n                email: formData.email,\r\n            });\r\n            alert(response.data.message);\r\n            setOtpSent(true);\r\n            setOtp('');\r\n        } catch (error) {\r\n            console.error('Error sending OTP:', error);\r\n            alert('Failed to send OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleLearnerSignup = async () => {\r\n        try {\r\n            const dataToSend = {\r\n                ...formData,\r\n                otp: otp,\r\n            };\r\n\r\n            const response = await api.post('/learner-signup/', dataToSend, {headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'X-CSRFToken': csrfToken,\r\n        }});\r\n\r\n            if (response.status === 201) {\r\n                alert('Learner signed up successfully!');\r\n\r\n            } else {\r\n                alert(`Error: ${response.data.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during signup:', error);\r\n            alert('Error during signup. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"learner-component-background\">\r\n            <div className=\"container4\">\r\n            <h2>Learner Sign Up</h2>\r\n            {isLoading && <p>Loading...</p>}\r\n            {!isOtpVerified ? (\r\n                <>\r\n                    {otpSent ? (\r\n                        <form onSubmit={handleOTPVerification}>\r\n                            <label>Enter OTP</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                required\r\n                            />\r\n                            <input type=\"submit\" value=\"Verify OTP\" />\r\n                            <button type=\"button\" onClick={handleResendOTP}>\r\n                                Resend OTP\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <form  onSubmit={handleSubmit} >\r\n                        \r\n                            <label>Full Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"e.g. Thomas Alva Edison\"\r\n                                value={formData.name}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                value={formData.dob}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Profile Picture</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"profile_picture\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            /><br></br>\r\n\r\n                            <label>Highest Qualification</label>\r\n                            <select\r\n                                name=\"highest_qualification\"\r\n                                value={formData.highest_qualification}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    Select your qualification\r\n                                </option>\r\n                                <option value=\"Grade 1\">Grade 1</option>\r\n                                <option value=\"Grade 2\">Grade 2</option>\r\n                                <option value=\"Grade 3\">Grade 3</option>\r\n                                <option value=\"Grade 4\">Grade 4</option>\r\n                                <option value=\"Grade 5\">Grade 5</option>\r\n                                <option value=\"Grade 6\">Grade 6</option>\r\n                                <option value=\"Grade 7\">Grade 7</option>\r\n                                <option value=\"Grade 8\">Grade 8</option>\r\n                                <option value=\"Grade 9\">Grade 9</option>\r\n                                <option value=\"Grade 10\">Grade 10</option>\r\n                                <option value=\"Grade 11\">Grade 11</option>\r\n                                <option value=\"Grade 12\">Grade 12</option>\r\n                                <option value=\"B.A.\">Bachelor of Arts (B.A.)</option>\r\n                                <option value=\"B.Sc.\">Bachelor of Science (B.Sc.)</option>\r\n                                <option value=\"B.Com\">Bachelor of Commerce (B.Com)</option>\r\n                                <option value=\"B.E.\">Bachelor of Engineering (B.E.)</option>\r\n                                <option value=\"B.Tech\">Bachelor of Technology (B.Tech)</option>\r\n                                <option value=\"B.Pharm\">Bachelor of Pharmacy (B.Pharm)</option>\r\n                                <option value=\"B.Arch\">Bachelor of Architecture (B.Arch)</option>\r\n                                <option value=\"BBA\">Bachelor of Business Administration (BBA)</option>\r\n                                <option value=\"BCA\">Bachelor of Computer Applications (BCA)</option>\r\n                                <option value=\"MBBS\">Bachelor of Medicine, Bachelor of Surgery (MBBS)</option>\r\n                                <option value=\"BDS\">Bachelor of Dental Surgery (BDS)</option>\r\n                                <option value=\"B.V.Sc.\">Bachelor of Veterinary Science (B.V.Sc.)</option>\r\n                                <option value=\"LL.B\">Bachelor of Laws (LL.B)</option>\r\n                                <option value=\"M.A.\">Master of Arts (M.A.)</option>\r\n                                <option value=\"M.Sc.\">Master of Science (M.Sc.)</option>\r\n                                <option value=\"M.Com\">Master of Commerce (M.Com)</option>\r\n                                <option value=\"M.E.\">Master of Engineering (M.E.)</option>\r\n                                <option value=\"M.Tech\">Master of Technology (M.Tech)</option>\r\n                                <option value=\"MBA\">Master of Business Administration (MBA)</option>\r\n                                <option value=\"MCA\">Master of Computer Applications (MCA)</option>\r\n                                <option value=\"MD\">Doctor of Medicine (MD)</option>\r\n                                <option value=\"MS\">Master of Surgery (MS)</option>\r\n                                <option value=\"M.Pharm\">Master of Pharmacy (M.Pharm)</option>\r\n                                <option value=\"LL.M\">Master of Laws (LL.M)</option>\r\n                                <option value=\"Ph.D\">Doctor of Philosophy (Ph.D)</option>\r\n                            </select>\r\n                            <br></br>\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleInputChange}\r\n                                onSubmit={handleSubmit}\r\n                                required\r\n                            />\r\n                            {errorFields.email && <span style={{ color: 'red' }}>{errorFields.email}</span>}\r\n                            <br />\r\n\r\n                            <label>Mobile No</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"mobile_no\"\r\n                                value={formData.mobile_no}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <label>Username</label>\r\n                            <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            />\r\n                            {errorFields.username && <span style={{ color: 'red' }}>{errorFields.username}</span>}\r\n{usernameAvailable && (\r\n    <p style={{ color: 'green' }}>Username is available.</p>\r\n)}\r\n{usernameAvailable === false && !errorFields.username && (\r\n    <p style={{ color: 'red' }}>Username is unavailable.</p>\r\n)}\r\n                            <br />\r\n\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            {passwordErrors.map((error, index) => (\r\n                                <p key={index} style={{ color: 'red' }}>\r\n                                    {error}\r\n                                </p>\r\n                            ))}\r\n                            <br />\r\n\r\n                            <input type=\"submit\" value=\"Sign Up\" />\r\n                        </form>\r\n                    )}\r\n                    <a href=\"/learner-signin\">Already have an Account? Sign In</a>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <p>OTP verified successfully! Proceed with the next steps.</p>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n   );\r\n}\r\nexport default LearnerSignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}