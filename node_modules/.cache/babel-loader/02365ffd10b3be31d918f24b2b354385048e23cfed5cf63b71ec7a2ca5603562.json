{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sugu\\\\Code\\\\Projects\\\\Project EduGate\\\\react-project\\\\src\\\\LearnerSignUp.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and modules\nimport React, { useState, useEffect } from 'react';\nimport './LearnerSignUp.css';\nimport api from './api';\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LearnerSignUp() {\n  _s();\n  // Define state variables for form data, OTP, loading status, and error fields\n  const [formData, setFormData] = useState({\n    name: '',\n    dob: '',\n    highest_qualification: '',\n    email: '',\n    mobile_no: '',\n    username: '',\n    password: ''\n  });\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorFields, setErrorFields] = useState({\n    email: '',\n    mobile_no: '',\n    username: ''\n  });\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [csrfToken, setCsrfToken] = useState('');\n  const [usernameAvailable, setUsernameAvailable] = useState(null); // Initialize as null\n\n  useEffect(() => {\n    async function fetchCsrfToken() {\n      try {\n        const response = await api.get('/get-learner-csrf-token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n        // Handle error if unable to fetch CSRF token\n      }\n    }\n    fetchCsrfToken();\n  }, []);\n\n  // Function to handle username availability check\n  const debouncedCheckLearnerUsernameAvailability = debounce(async username => {\n    // Return early if the username is empty\n    if (!username) {\n      setUsernameAvailable(null); // Reset availability state\n      setErrorFields(prevFields => ({\n        ...prevFields,\n        username: 'Username cannot be empty.'\n      }));\n      return;\n    }\n    try {\n      // Make a POST request to check username availability\n      const response = await api.post('/check-learner-username-availability/', {\n        username,\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n\n      // Handle the response data\n      const isUnique = response.data.username.is_unique;\n      setUsernameAvailable(isUnique);\n\n      // Update error fields and error message based on availability\n      if (isUnique) {\n        setErrorFields(prevFields => ({\n          ...prevFields,\n          username: '' // Clear any previous error\n        }));\n      } else {\n        setErrorFields(prevFields => ({\n          ...prevFields,\n          username: ''\n        }));\n      }\n    } catch (error) {\n      // Handle any error during the request\n      console.error('Error checking username:', error);\n      setErrorFields(prevFields => ({\n        ...prevFields,\n        username: 'Error checking username. Please try again.'\n      }));\n      setUsernameAvailable(false);\n    }\n  }, 300);\n  const debouncedCheckLearnerUniqueFields = debounce(async (email, mobile_no) => {\n    setIsLoading(true);\n    try {\n      const response = await api.post('/check-learner-unique-fields/', {\n        email,\n        mobile_no\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      setErrorFields({\n        email: response.data.success && !response.data.email_exists ? '' : response.data.message,\n        mobile_no: response.data.success && !response.data.mobile_no_exists ? '' : response.data.message\n      });\n    } catch (error) {\n      console.error('Error checking unique fields:', error);\n      setErrorFields({\n        email: 'Error checking email. Please try again.',\n        mobile_no: 'Error checking mobile number. Please try again.'\n      });\n    }\n    if (errorFields.email) {\n      alert(errorFields.email); // Alert the error message\n      return;\n    }\n    if (errorFields.mobile_no) {\n      alert(errorFields.mobile_no); // Alert the error message\n      return;\n    }\n    // If all unique field checks pass, proceed to send OTP\n\n    try {\n      const response = await api.post('/learner-send-otp/', {\n        email\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      alert(response.data.message);\n      setOtpSent(true);\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      alert('Failed to send OTP. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, 300);\n  function validatePassword(password) {\n    const minLength = 8;\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasSpecialCharacter = /[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);\n    let errorMessages = [];\n    if (password.length < minLength) {\n      errorMessages.push('Password must be at least 8 characters long.');\n    }\n    if (!hasUppercase) {\n      errorMessages.push('Password must contain at least one uppercase letter.');\n    }\n    if (!hasLowercase) {\n      errorMessages.push('Password must contain at least one lowercase letter.');\n    }\n    if (!hasSpecialCharacter) {\n      errorMessages.push('Password must contain at least one special character.');\n    }\n    return errorMessages;\n  }\n\n  // Handle input change events\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n\n    // Handle real-time username availability check\n    if (name === 'username') {\n      debouncedCheckLearnerUsernameAvailability(value);\n    }\n\n    // Trigger password validation when password changes\n    if (name === 'password') {\n      const errors = validatePassword(value);\n      setPasswordErrors(errors);\n    }\n  };\n\n  // const handleProfilePictureChange = (e) => {\n  //     const file = e.target.files[0];\n  //     setFormData((prevFormData) => ({\n  //         ...prevFormData,\n  //         profile_picture: file,\n  //     }));\n  // };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check for password errors\n    if (passwordErrors.length > 0) {\n      alert('Please fix password errors before submitting.');\n      return;\n    }\n\n    // try {\n    //     const formData = new FormData();\n    //     formData.append('profile_picture', formData.profile_picture);\n    //     formData.append('email', formData.email)\n\n    //     // Make a POST request to upload the profile picture\n    //     const response = await api.post('/api/upload-learner-profile-picture/', formData, {\n    //         headers: {\n    //             'Content-Type': 'multipart/form-data',\n    //             'X-CSRFToken': csrfToken,\n    //         },\n    //     });\n\n    // Handle the response\n    //     console.log(response.data); // Output the response data\n    // } catch (error) {\n    //     console.error('Error uploading profile picture:', error);\n    // }\n\n    // Extract email and mobile_no from formData\n\n    const {\n      email,\n      mobile_no\n    } = formData;\n    await debouncedCheckLearnerUniqueFields(email, mobile_no);\n\n    // If there are any errors in email or mobile_no, display the error messages\n    // below the corresponding fields and stop form submission\n\n    // If all unique field checks pass, proceed to send OTP\n\n    // Handle OTP verification\n    const handleOTPVerification = async e => {\n      e.preventDefault();\n      setIsLoading(true);\n      try {\n        const response = await api.post('/learner-verify-otp/', {\n          email: formData.email,\n          otp: otp\n        });\n        if (response.data.success) {\n          setIsOtpVerified(true);\n          alert('OTP verified successfully!');\n          // Proceed to learner signup\n          await handleLearnerSignup();\n        } else {\n          alert('Incorrect OTP. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error verifying OTP:', error);\n        alert('Error verifying OTP. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const handleResendOTP = async () => {\n      setIsLoading(true);\n      try {\n        const response = await api.post('/learner-send-otp/', {\n          email: formData.email\n        });\n        alert(response.data.message);\n        setOtpSent(true);\n        setOtp(''); // Clear OTP input\n      } catch (error) {\n        console.error('Error sending OTP:', error);\n        alert('Failed to send OTP. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Handle learner sign-up\n    const handleLearnerSignup = async () => {\n      try {\n        // Prepare data to send\n        const dataToSend = {\n          ...formData,\n          otp: otp\n        };\n\n        // Make a POST request to the learner signup endpoint\n        const response = await api.post('/learner-signup/', dataToSend);\n\n        // Handle the response\n        if (response.status === 201) {\n          alert('Learner signed up successfully!');\n          // Perform any other navigation or state updates as needed\n        } else {\n          alert(`Error: ${response.data.message}`);\n        }\n      } catch (error) {\n        console.error('Error during signup:', error);\n        alert('Error during signup. Please try again.');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learner-component-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Learner Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 27\n        }, this), !isOtpVerified ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [otpSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleOTPVerification,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: otp,\n              onChange: e => setOtp(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Verify OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleResendOTP,\n              children: \"Resend OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"e.g. Thomas Alva Edison\",\n              value: formData.name,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"dob\",\n              value: formData.dob,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Highest Qualification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"highest_qualification\",\n              value: formData.highest_qualification,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select your qualification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 1\",\n                children: \"Grade 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 2\",\n                children: \"Grade 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 3\",\n                children: \"Grade 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 4\",\n                children: \"Grade 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 5\",\n                children: \"Grade 5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 6\",\n                children: \"Grade 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 7\",\n                children: \"Grade 7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 8\",\n                children: \"Grade 8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 9\",\n                children: \"Grade 9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 10\",\n                children: \"Grade 10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 11\",\n                children: \"Grade 11\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Grade 12\",\n                children: \"Grade 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.A.\",\n                children: \"Bachelor of Arts (B.A.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.Sc.\",\n                children: \"Bachelor of Science (B.Sc.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.Com\",\n                children: \"Bachelor of Commerce (B.Com)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.E.\",\n                children: \"Bachelor of Engineering (B.E.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.Tech\",\n                children: \"Bachelor of Technology (B.Tech)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.Pharm\",\n                children: \"Bachelor of Pharmacy (B.Pharm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.Arch\",\n                children: \"Bachelor of Architecture (B.Arch)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BBA\",\n                children: \"Bachelor of Business Administration (BBA)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BCA\",\n                children: \"Bachelor of Computer Applications (BCA)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MBBS\",\n                children: \"Bachelor of Medicine, Bachelor of Surgery (MBBS)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BDS\",\n                children: \"Bachelor of Dental Surgery (BDS)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B.V.Sc.\",\n                children: \"Bachelor of Veterinary Science (B.V.Sc.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"LL.B\",\n                children: \"Bachelor of Laws (LL.B)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M.A.\",\n                children: \"Master of Arts (M.A.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M.Sc.\",\n                children: \"Master of Science (M.Sc.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M.Com\",\n                children: \"Master of Commerce (M.Com)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M.E.\",\n                children: \"Master of Engineering (M.E.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M.Tech\",\n                children: \"Master of Technology (M.Tech)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MBA\",\n                children: \"Master of Business Administration (MBA)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MCA\",\n                children: \"Master of Computer Applications (MCA)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MD\",\n                children: \"Doctor of Medicine (MD)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MS\",\n                children: \"Master of Surgery (MS)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"M.Pharm\",\n                children: \"Master of Pharmacy (M.Pharm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"LL.M\",\n                children: \"Master of Laws (LL.M)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Ph.D\",\n                children: \"Doctor of Philosophy (Ph.D)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              onSubmit: handleSubmit,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this), errorFields.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: errorFields.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Mobile No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"mobile_no\",\n              value: formData.mobile_no,\n              onChange: handleInputChange,\n              onSubmit: handleSubmit,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), errorFields.mobile_no && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: errorFields.mobile_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this), errorFields.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: errorFields.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 54\n            }, this), usernameAvailable && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'green'\n              },\n              children: \"Username is available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 5\n            }, this), usernameAvailable === false && !errorFields.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"Username is unavailable.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 29\n            }, this), passwordErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: error\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/learner-signin\",\n            children: \"Already have an Account? Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"OTP verified successfully! Proceed with the next steps.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this);\n  };\n}\n_s(LearnerSignUp, \"cQQuHx6GIVqF3FNIRaGqjaAWRxk=\");\n_c = LearnerSignUp;\nexport default LearnerSignUp;\nvar _c;\n$RefreshReg$(_c, \"LearnerSignUp\");","map":{"version":3,"names":["React","useState","useEffect","api","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","LearnerSignUp","_s","formData","setFormData","name","dob","highest_qualification","email","mobile_no","username","password","otp","setOtp","otpSent","setOtpSent","isOtpVerified","setIsOtpVerified","isLoading","setIsLoading","errorFields","setErrorFields","passwordErrors","setPasswordErrors","csrfToken","setCsrfToken","usernameAvailable","setUsernameAvailable","fetchCsrfToken","response","get","data","error","console","debouncedCheckLearnerUsernameAvailability","prevFields","post","headers","isUnique","is_unique","debouncedCheckLearnerUniqueFields","success","email_exists","message","mobile_no_exists","alert","validatePassword","minLength","hasUppercase","test","hasLowercase","hasSpecialCharacter","errorMessages","length","push","handleInputChange","e","value","target","prevFormData","errors","handleSubmit","preventDefault","handleOTPVerification","handleLearnerSignup","handleResendOTP","dataToSend","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","placeholder","disabled","style","color","map","index","href","_c","$RefreshReg$"],"sources":["D:/Sugu/Code/Projects/Project EduGate/react-project/src/LearnerSignUp.js"],"sourcesContent":["// Import necessary libraries and modules\r\nimport React, { useState, useEffect } from 'react';\r\nimport './LearnerSignUp.css';\r\nimport api from './api';\r\nimport { debounce } from 'lodash';\r\n\r\nfunction LearnerSignUp() {\r\n    // Define state variables for form data, OTP, loading status, and error fields\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        dob: '',\r\n        highest_qualification: '',\r\n        email: '',\r\n        mobile_no: '',\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    const [otp, setOtp] = useState('');\r\n    const [otpSent, setOtpSent] = useState(false);\r\n    const [isOtpVerified, setIsOtpVerified] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorFields, setErrorFields] = useState({\r\n        email: '',\r\n        mobile_no: '',\r\n        username: '',\r\n    });\r\n    \r\n    const [passwordErrors, setPasswordErrors] = useState([]);\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\n    const [usernameAvailable, setUsernameAvailable] = useState(null); // Initialize as null\r\n\r\n    useEffect(() => {\r\n        async function fetchCsrfToken() {\r\n            try {\r\n                const response = await api.get('/get-learner-csrf-token/');\r\n                setCsrfToken(response.data.csrfToken);\r\n            } catch (error) {\r\n                console.error('Error fetching CSRF token:', error);\r\n                // Handle error if unable to fetch CSRF token\r\n            }\r\n        }\r\n\r\n        fetchCsrfToken();\r\n    }, []);\r\n\r\n// Function to handle username availability check\r\nconst debouncedCheckLearnerUsernameAvailability = debounce(async (username) => {\r\n    // Return early if the username is empty\r\n    if (!username) {\r\n        setUsernameAvailable(null); // Reset availability state\r\n        setErrorFields((prevFields) => ({\r\n            ...prevFields,\r\n            username: 'Username cannot be empty.',\r\n        }));\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Make a POST request to check username availability\r\n        const response = await api.post('/check-learner-username-availability/', {\r\n            username, headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }\r\n        });\r\n\r\n        // Handle the response data\r\n        const isUnique = response.data.username.is_unique;\r\n        setUsernameAvailable(isUnique);\r\n\r\n        // Update error fields and error message based on availability\r\n        if (isUnique) {\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: '', // Clear any previous error\r\n            }));\r\n        } else {\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: '',\r\n            }));\r\n        }\r\n    } catch (error) {\r\n        // Handle any error during the request\r\n        console.error('Error checking username:', error);\r\n        setErrorFields((prevFields) => ({\r\n            ...prevFields,\r\n            username: 'Error checking username. Please try again.',\r\n        }));\r\n        setUsernameAvailable(false);\r\n    }\r\n}, 300);\r\n\r\nconst debouncedCheckLearnerUniqueFields = debounce(async (email, mobile_no) => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n        const response = await api.post('/check-learner-unique-fields/', {\r\n            email,\r\n            mobile_no\r\n        },{headers: {\r\n            'X-CSRFToken': csrfToken,\r\n        }}\r\n    );\r\n\r\n    setErrorFields({\r\n        email: response.data.success && !response.data.email_exists ? '' : response.data.message,\r\n        mobile_no: response.data.success && !response.data.mobile_no_exists ? '' : response.data.message\r\n    });\r\n\r\n    } catch (error) {\r\n        console.error('Error checking unique fields:', error);\r\n        setErrorFields({\r\n            email: 'Error checking email. Please try again.',\r\n            mobile_no: 'Error checking mobile number. Please try again.'\r\n        });\r\n    }\r\n\r\n    if (errorFields.email) {\r\n        alert(errorFields.email); // Alert the error message\r\n        return;\r\n    }\r\n    if (errorFields.mobile_no) {\r\n        alert(errorFields.mobile_no); // Alert the error message\r\n        return;\r\n    }\r\n    // If all unique field checks pass, proceed to send OTP\r\n\r\n   \r\n    try {\r\n        const response = await api.post('/learner-send-otp/', { email },{headers: {\r\n            'X-CSRFToken': csrfToken,\r\n        }});\r\n        alert(response.data.message);\r\n        setOtpSent(true);\r\n    } catch (error) {\r\n        console.error('Error sending OTP:', error);\r\n        alert('Failed to send OTP. Please try again.');\r\n    } finally {\r\n        setIsLoading(false);\r\n    }\r\n\r\n\r\n}, 300);\r\n\r\n    function validatePassword(password) {\r\n        const minLength = 8;\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasSpecialCharacter = /[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);\r\n    \r\n        let errorMessages = [];\r\n    \r\n        if (password.length < minLength) {\r\n            errorMessages.push('Password must be at least 8 characters long.');\r\n        }\r\n        if (!hasUppercase) {\r\n            errorMessages.push('Password must contain at least one uppercase letter.');\r\n        }\r\n        if (!hasLowercase) {\r\n            errorMessages.push('Password must contain at least one lowercase letter.');\r\n        }\r\n        if (!hasSpecialCharacter) {\r\n            errorMessages.push('Password must contain at least one special character.');\r\n        }\r\n    \r\n        return errorMessages;\r\n    }\r\n\r\n    // Handle input change events\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: value,\r\n        }));\r\n    \r\n        // Handle real-time username availability check\r\n        if (name === 'username') {\r\n            debouncedCheckLearnerUsernameAvailability(value);\r\n        }\r\n    \r\n        // Trigger password validation when password changes\r\n        if (name === 'password') {\r\n            const errors = validatePassword(value);\r\n            setPasswordErrors(errors);\r\n        }\r\n    };\r\n\r\n    // const handleProfilePictureChange = (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     setFormData((prevFormData) => ({\r\n    //         ...prevFormData,\r\n    //         profile_picture: file,\r\n    //     }));\r\n    // };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        // Check for password errors\r\n        if (passwordErrors.length > 0) {\r\n            alert('Please fix password errors before submitting.');\r\n            return;\r\n        }\r\n\r\n        // try {\r\n        //     const formData = new FormData();\r\n        //     formData.append('profile_picture', formData.profile_picture);\r\n        //     formData.append('email', formData.email)\r\n\r\n        //     // Make a POST request to upload the profile picture\r\n        //     const response = await api.post('/api/upload-learner-profile-picture/', formData, {\r\n        //         headers: {\r\n        //             'Content-Type': 'multipart/form-data',\r\n        //             'X-CSRFToken': csrfToken,\r\n        //         },\r\n        //     });\r\n\r\n            // Handle the response\r\n        //     console.log(response.data); // Output the response data\r\n        // } catch (error) {\r\n        //     console.error('Error uploading profile picture:', error);\r\n        // }\r\n\r\n        // Extract email and mobile_no from formData\r\n  \r\n        const { email, mobile_no } = formData;\r\n        await debouncedCheckLearnerUniqueFields(email, mobile_no);\r\n    \r\n        // If there are any errors in email or mobile_no, display the error messages\r\n        // below the corresponding fields and stop form submission\r\n\r\n    \r\n        // If all unique field checks pass, proceed to send OTP\r\n\r\n        // Handle OTP verification\r\n    const handleOTPVerification = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await api.post('/learner-verify-otp/', {\r\n                email: formData.email,\r\n                otp: otp,\r\n            });\r\n\r\n            if (response.data.success) {\r\n                setIsOtpVerified(true);\r\n                alert('OTP verified successfully!');\r\n                // Proceed to learner signup\r\n                await handleLearnerSignup();\r\n            } else {\r\n                alert('Incorrect OTP. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error verifying OTP:', error);\r\n            alert('Error verifying OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await api.post('/learner-send-otp/', {\r\n                email: formData.email,\r\n            });\r\n            alert(response.data.message);\r\n            setOtpSent(true);\r\n            setOtp(''); // Clear OTP input\r\n        } catch (error) {\r\n            console.error('Error sending OTP:', error);\r\n            alert('Failed to send OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle learner sign-up\r\n    const handleLearnerSignup = async () => {\r\n        try {\r\n            // Prepare data to send\r\n            const dataToSend = {\r\n                ...formData,\r\n                otp: otp,\r\n            };\r\n\r\n            // Make a POST request to the learner signup endpoint\r\n            const response = await api.post('/learner-signup/', dataToSend);\r\n\r\n            // Handle the response\r\n            if (response.status === 201) {\r\n                alert('Learner signed up successfully!');\r\n                // Perform any other navigation or state updates as needed\r\n            } else {\r\n                alert(`Error: ${response.data.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during signup:', error);\r\n            alert('Error during signup. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"learner-component-background\">\r\n            <div className=\"container4\">\r\n            <h2>Learner Sign Up</h2>\r\n            {isLoading && <p>Loading...</p>}\r\n            {!isOtpVerified ? (\r\n                <>\r\n                    {otpSent ? (\r\n                        <form onSubmit={handleOTPVerification}>\r\n                            <label>Enter OTP</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                required\r\n                            />\r\n                            <input type=\"submit\" value=\"Verify OTP\" />\r\n                            <button type=\"button\" onClick={handleResendOTP}>\r\n                                Resend OTP\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <form  onSubmit={handleSubmit}>\r\n                        \r\n                            <label>Full Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"e.g. Thomas Alva Edison\"\r\n                                value={formData.name}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                value={formData.dob}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Highest Qualification</label>\r\n                            <select\r\n                                name=\"highest_qualification\"\r\n                                value={formData.highest_qualification}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    Select your qualification\r\n                                </option>\r\n                                <option value=\"Grade 1\">Grade 1</option>\r\n                                <option value=\"Grade 2\">Grade 2</option>\r\n                                <option value=\"Grade 3\">Grade 3</option>\r\n                                <option value=\"Grade 4\">Grade 4</option>\r\n                                <option value=\"Grade 5\">Grade 5</option>\r\n                                <option value=\"Grade 6\">Grade 6</option>\r\n                                <option value=\"Grade 7\">Grade 7</option>\r\n                                <option value=\"Grade 8\">Grade 8</option>\r\n                                <option value=\"Grade 9\">Grade 9</option>\r\n                                <option value=\"Grade 10\">Grade 10</option>\r\n                                <option value=\"Grade 11\">Grade 11</option>\r\n                                <option value=\"Grade 12\">Grade 12</option>\r\n                                <option value=\"B.A.\">Bachelor of Arts (B.A.)</option>\r\n                                <option value=\"B.Sc.\">Bachelor of Science (B.Sc.)</option>\r\n                                <option value=\"B.Com\">Bachelor of Commerce (B.Com)</option>\r\n                                <option value=\"B.E.\">Bachelor of Engineering (B.E.)</option>\r\n                                <option value=\"B.Tech\">Bachelor of Technology (B.Tech)</option>\r\n                                <option value=\"B.Pharm\">Bachelor of Pharmacy (B.Pharm)</option>\r\n                                <option value=\"B.Arch\">Bachelor of Architecture (B.Arch)</option>\r\n                                <option value=\"BBA\">Bachelor of Business Administration (BBA)</option>\r\n                                <option value=\"BCA\">Bachelor of Computer Applications (BCA)</option>\r\n                                <option value=\"MBBS\">Bachelor of Medicine, Bachelor of Surgery (MBBS)</option>\r\n                                <option value=\"BDS\">Bachelor of Dental Surgery (BDS)</option>\r\n                                <option value=\"B.V.Sc.\">Bachelor of Veterinary Science (B.V.Sc.)</option>\r\n                                <option value=\"LL.B\">Bachelor of Laws (LL.B)</option>\r\n                                <option value=\"M.A.\">Master of Arts (M.A.)</option>\r\n                                <option value=\"M.Sc.\">Master of Science (M.Sc.)</option>\r\n                                <option value=\"M.Com\">Master of Commerce (M.Com)</option>\r\n                                <option value=\"M.E.\">Master of Engineering (M.E.)</option>\r\n                                <option value=\"M.Tech\">Master of Technology (M.Tech)</option>\r\n                                <option value=\"MBA\">Master of Business Administration (MBA)</option>\r\n                                <option value=\"MCA\">Master of Computer Applications (MCA)</option>\r\n                                <option value=\"MD\">Doctor of Medicine (MD)</option>\r\n                                <option value=\"MS\">Master of Surgery (MS)</option>\r\n                                <option value=\"M.Pharm\">Master of Pharmacy (M.Pharm)</option>\r\n                                <option value=\"LL.M\">Master of Laws (LL.M)</option>\r\n                                <option value=\"Ph.D\">Doctor of Philosophy (Ph.D)</option>\r\n                            </select>\r\n                            <br></br>\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleInputChange}\r\n                                onSubmit={handleSubmit}\r\n                                required\r\n                            />\r\n                            {errorFields.email && <span style={{ color: 'red' }}>{errorFields.email}</span>}\r\n                            <br />\r\n\r\n                            <label>Mobile No</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"mobile_no\"\r\n                                value={formData.mobile_no}\r\n                                onChange={handleInputChange}\r\n                                onSubmit={handleSubmit}\r\n                                required\r\n                            />\r\n                            {errorFields.mobile_no && <span style={{ color: 'red' }}>{errorFields.mobile_no}</span>}\r\n                            <br />\r\n\r\n                            <label>Username</label>\r\n                            <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            />\r\n                            {errorFields.username && <span style={{ color: 'red' }}>{errorFields.username}</span>}\r\n{usernameAvailable && (\r\n    <p style={{ color: 'green' }}>Username is available.</p>\r\n)}\r\n{usernameAvailable === false && !errorFields.username && (\r\n    <p style={{ color: 'red' }}>Username is unavailable.</p>\r\n)}\r\n                            <br />\r\n\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            {passwordErrors.map((error, index) => (\r\n                                <p key={index} style={{ color: 'red' }}>\r\n                                    {error}\r\n                                </p>\r\n                            ))}\r\n                            <br />\r\n\r\n                            <input type=\"submit\" value=\"Sign Up\" />\r\n                        </form>\r\n                    )}\r\n                    <a href=\"/learner-signin\">Already have an Account? Sign In</a>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <p>OTP verified successfully! Proceed with the next steps.</p>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n   );\r\n}}\r\nexport default LearnerSignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}