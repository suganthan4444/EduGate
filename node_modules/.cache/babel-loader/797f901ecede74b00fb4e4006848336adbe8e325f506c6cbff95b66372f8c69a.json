{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sugu\\\\Code\\\\Projects\\\\Project EduGate\\\\react-project\\\\src\\\\EducatorSignUp.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and modules\nimport React, { useState } from 'react';\nimport './EducatorSignUp.css';\nimport api from './api';\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EducatorSignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    dob: '',\n    highest_qualification: '',\n    email: '',\n    mobile_no: '',\n    username: '',\n    password: ''\n  });\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorFields, setErrorFields] = useState({\n    email: '',\n    mobile_no: '',\n    username: ''\n  });\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [csrfToken, setCsrfToken] = useState('');\n  const [usernameAvailable, setUsernameAvailable] = useState(null); // Initialize as null\n\n  useEffect(() => {\n    async function fetchCsrfToken() {\n      try {\n        const response = await api.get('/get-learner-csrf-token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n        // Handle error if unable to fetch CSRF token\n      }\n    }\n    fetchCsrfToken();\n  }, []);\n\n  // Function to handle username availability check\n  const debouncedCheckEducatorUsernameAvailability = debounce(async username => {\n    // Return early if the username is empty\n    if (!username) {\n      setUsernameAvailable(null); // Reset availability state\n      setErrorFields(prevFields => ({\n        ...prevFields,\n        username: 'Username cannot be empty.'\n      }));\n      return;\n    }\n    try {\n      // Make a POST request to check username availability\n      const response = await api.post('/check-educator-username-availability/', {\n        username,\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n\n      // Handle the response data\n      const isUnique = response.data.username.is_unique;\n      setUsernameAvailable(isUnique);\n\n      // Update error fields and error message based on availability\n      if (isUnique) {\n        setErrorFields(prevFields => ({\n          ...prevFields,\n          username: '' // Clear any previous error\n        }));\n      } else {\n        setErrorFields(prevFields => ({\n          ...prevFields,\n          username: response.data.username.message || 'Username is unavailable.'\n        }));\n      }\n    } catch (error) {\n      // Handle any error during the request\n      console.error('Error checking username:', error);\n      setErrorFields(prevFields => ({\n        ...prevFields,\n        username: 'Error checking username. Please try again.'\n      }));\n      setUsernameAvailable(false);\n    }\n  }, 300);\n  const debouncedCheckEducatorUniqueFields = debounce(async (email, mobile_no) => {\n    try {\n      const response = await api.post('/check-educator-unique-fields/', {\n        email,\n        mobile_no\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      setErrorFields({\n        email: response.data.email.is_unique ? '' : response.data.email.message,\n        mobile_no: response.data.mobile_no.is_unique ? '' : response.data.mobile_no.message\n      });\n    } catch (error) {\n      console.error('Error checking unique fields:', error);\n      setErrorFields({\n        email: 'Error checking email. Please try again.',\n        mobile_no: 'Error checking mobile number. Please try again.'\n      });\n    }\n  }, 300);\n  function validatePassword(password) {\n    const minLength = 8;\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasSpecialCharacter = /[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);\n    let errorMessages = [];\n    if (password.length < minLength) {\n      errorMessages.push('Password must be at least 8 characters long.');\n    }\n    if (!hasUppercase) {\n      errorMessages.push('Password must contain at least one uppercase letter.');\n    }\n    if (!hasLowercase) {\n      errorMessages.push('Password must contain at least one lowercase letter.');\n    }\n    if (!hasSpecialCharacter) {\n      errorMessages.push('Password must contain at least one special character.');\n    }\n    return errorMessages;\n  }\n\n  // Handle input change events\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n\n    // Handle real-time username availability check\n    if (name === 'username') {\n      debouncedCheckEducatorUsernameAvailability(value);\n    }\n\n    // Trigger password validation when password changes\n    if (name === 'password') {\n      const errors = validatePassword(value);\n      setPasswordErrors(errors);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check for password errors\n    if (passwordErrors.length > 0) {\n      alert('Please fix password errors before submitting.');\n      return;\n    }\n\n    // Extract email and mobile_no from formData\n    const {\n      email,\n      mobile_no\n    } = formData;\n\n    // Check learner unique fields\n    await debouncedCheckEducatorUniqueFields(email, mobile_no);\n\n    // If there are any errors in email or mobile_no, display the error messages\n    // below the corresponding fields and stop form submission\n    if (errorFields.email) {\n      alert(errorFields.email); // Alert the error message\n      return;\n    }\n    if (errorFields.mobile_no) {\n      alert(errorFields.mobile_no); // Alert the error message\n      return;\n    }\n\n    // If all unique field checks pass, proceed to send OTP\n    setIsLoading(true);\n    try {\n      const response = await api.post('/educator-send-otp/', {\n        email\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      alert(response.data.message);\n      setOtpSent(true);\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      alert('Failed to send OTP. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle OTP verification\n  const handleOTPVerification = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await api.post('/educator-verify-otp/', {\n        email: formData.email,\n        otp: otp\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      if (response.data.success) {\n        setIsOtpVerified(true);\n        alert('OTP verified successfully!');\n        // Proceed to learner signup\n        await handleEducatorSignup();\n      } else {\n        alert('Incorrect OTP. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      alert('Error verifying OTP. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleResendOTP = async () => {\n    setIsLoading(true);\n    try {\n      const response = await api.post('/educator-send-otp/', {\n        email: formData.email,\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n      alert(response.data.message);\n      setOtpSent(true);\n      setOtp(''); // Clear OTP input\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      alert('Failed to send OTP. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle learner sign-up\n  const handleEducatorSignup = async () => {\n    try {\n      // Prepare data to send\n      const dataToSend = {\n        ...formData,\n        otp: otp\n      };\n\n      // Make a POST request to the learner signup endpoint\n      const response = await api.post('/educator-signup/', dataToSend, {\n        headers: {\n          'X-CSRFToken': csrfToken\n        }\n      });\n\n      // Handle the response\n      if (response.status === 201) {\n        alert('Educator signed up successfully!');\n        // Perform any other navigation or state updates as needed\n      } else {\n        alert(`Error: ${response.data.message}`);\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n      alert('Error during signup. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Educator Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 27\n    }, this), !isOtpVerified ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [otpSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOTPVerification,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleResendOTP,\n          children: \"Resend OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"e.g. Thomas Alva Edison\",\n          value: formData.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"dob\",\n          value: formData.dob,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Highest Qualification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"highest_qualification\",\n          value: formData.highest_qualification,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select your qualification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.A.\",\n            children: \"Bachelor of Arts (B.A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.Sc.\",\n            children: \"Bachelor of Science (B.Sc.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.Com\",\n            children: \"Bachelor of Commerce (B.Com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.E.\",\n            children: \"Bachelor of Engineering (B.E.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.Tech\",\n            children: \"Bachelor of Technology (B.Tech)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.Pharm\",\n            children: \"Bachelor of Pharmacy (B.Pharm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.Arch\",\n            children: \"Bachelor of Architecture (B.Arch)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BBA\",\n            children: \"Bachelor of Business Administration (BBA)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BCA\",\n            children: \"Bachelor of Computer Applications (BCA)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MBBS\",\n            children: \"Bachelor of Medicine, Bachelor of Surgery (MBBS)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BDS\",\n            children: \"Bachelor of Dental Surgery (BDS)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B.V.Sc.\",\n            children: \"Bachelor of Veterinary Science (B.V.Sc.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LL.B\",\n            children: \"Bachelor of Laws (LL.B)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M.A.\",\n            children: \"Master of Arts (M.A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M.Sc.\",\n            children: \"Master of Science (M.Sc.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M.Com\",\n            children: \"Master of Commerce (M.Com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M.E.\",\n            children: \"Master of Engineering (M.E.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M.Tech\",\n            children: \"Master of Technology (M.Tech)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MBA\",\n            children: \"Master of Business Administration (MBA)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MCA\",\n            children: \"Master of Computer Applications (MCA)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MD\",\n            children: \"Doctor of Medicine (MD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MS\",\n            children: \"Master of Surgery (MS)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M.Pharm\",\n            children: \"Master of Pharmacy (M.Pharm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LL.M\",\n            children: \"Master of Laws (LL.M)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ph.D\",\n            children: \"Doctor of Philosophy (Ph.D)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          onSubmit: handleSubmit,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }, this), errorFields.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errorFields.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mobile No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"mobile_no\",\n          value: formData.mobile_no,\n          onChange: handleInputChange,\n          onSubmit: handleSubmit,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }, this), errorFields.mobile_no && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errorFields.mobile_no\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }, this), errorFields.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errorFields.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 54\n        }, this), usernameAvailable && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Username is available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 5\n        }, this), usernameAvailable === false && !errorFields.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Username is unavailable.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 29\n        }, this), passwordErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/educator-signin\",\n        children: \"Already have an Account? Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"OTP verified successfully! Proceed with the next steps.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n}\n_s(EducatorSignUp, \"cQQuHx6GIVqF3FNIRaGqjaAWRxk=\");\n_c = EducatorSignUp;\nexport default EducatorSignUp;\nvar _c;\n$RefreshReg$(_c, \"EducatorSignUp\");","map":{"version":3,"names":["React","useState","api","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","EducatorSignUp","_s","formData","setFormData","name","dob","highest_qualification","email","mobile_no","username","password","otp","setOtp","otpSent","setOtpSent","isOtpVerified","setIsOtpVerified","isLoading","setIsLoading","errorFields","setErrorFields","passwordErrors","setPasswordErrors","csrfToken","setCsrfToken","usernameAvailable","setUsernameAvailable","useEffect","fetchCsrfToken","response","get","data","error","console","debouncedCheckEducatorUsernameAvailability","prevFields","post","headers","isUnique","is_unique","message","debouncedCheckEducatorUniqueFields","validatePassword","minLength","hasUppercase","test","hasLowercase","hasSpecialCharacter","errorMessages","length","push","handleInputChange","e","value","target","prevFormData","errors","handleSubmit","preventDefault","alert","handleOTPVerification","success","handleEducatorSignup","handleResendOTP","dataToSend","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","placeholder","disabled","style","color","map","index","href","_c","$RefreshReg$"],"sources":["D:/Sugu/Code/Projects/Project EduGate/react-project/src/EducatorSignUp.js"],"sourcesContent":["// Import necessary libraries and modules\r\nimport React, { useState } from 'react';\r\nimport './EducatorSignUp.css';\r\nimport api from './api';\r\nimport { debounce } from 'lodash';\r\n\r\n\r\n\r\n    function EducatorSignUp() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        dob: '',\r\n        highest_qualification: '',\r\n        email: '',\r\n        mobile_no: '',\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    const [otp, setOtp] = useState('');\r\n    const [otpSent, setOtpSent] = useState(false);\r\n    const [isOtpVerified, setIsOtpVerified] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorFields, setErrorFields] = useState({\r\n        email: '',\r\n        mobile_no: '',\r\n        username: '',\r\n    });\r\n    \r\n    const [passwordErrors, setPasswordErrors] = useState([]);\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\n    const [usernameAvailable, setUsernameAvailable] = useState(null); // Initialize as null\r\n\r\nuseEffect(() => {\r\n    async function fetchCsrfToken() {\r\n        try {\r\n            const response = await api.get('/get-learner-csrf-token/');\r\n            setCsrfToken(response.data.csrfToken);\r\n        } catch (error) {\r\n            console.error('Error fetching CSRF token:', error);\r\n            // Handle error if unable to fetch CSRF token\r\n        }\r\n    }\r\n\r\n    fetchCsrfToken();\r\n}, []);\r\n\r\n// Function to handle username availability check\r\nconst debouncedCheckEducatorUsernameAvailability = debounce(async (username) => {\r\n    // Return early if the username is empty\r\n    if (!username) {\r\n        setUsernameAvailable(null); // Reset availability state\r\n        setErrorFields((prevFields) => ({\r\n            ...prevFields,\r\n            username: 'Username cannot be empty.',\r\n        }));\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Make a POST request to check username availability\r\n        const response = await api.post('/check-educator-username-availability/', {\r\n            username, headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }\r\n        });\r\n\r\n        // Handle the response data\r\n        const isUnique = response.data.username.is_unique;\r\n        setUsernameAvailable(isUnique);\r\n\r\n        // Update error fields and error message based on availability\r\n        if (isUnique) {\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: '', // Clear any previous error\r\n            }));\r\n        } else {\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: response.data.username.message || 'Username is unavailable.',\r\n            }));\r\n        }\r\n    } catch (error) {\r\n        // Handle any error during the request\r\n        console.error('Error checking username:', error);\r\n        setErrorFields((prevFields) => ({\r\n            ...prevFields,\r\n            username: 'Error checking username. Please try again.',\r\n        }));\r\n        setUsernameAvailable(false);\r\n    }\r\n}, 300);\r\n\r\nconst debouncedCheckEducatorUniqueFields = debounce(async (email, mobile_no) => {\r\n    try {\r\n        const response = await api.post('/check-educator-unique-fields/', {\r\n            email,\r\n            mobile_no\r\n        },{headers: {\r\n            'X-CSRFToken': csrfToken,\r\n        }}\r\n    );\r\n\r\n        setErrorFields({\r\n            email: response.data.email.is_unique ? '' : response.data.email.message,\r\n            mobile_no: response.data.mobile_no.is_unique ? '' : response.data.mobile_no.message\r\n        });\r\n    } catch (error) {\r\n        console.error('Error checking unique fields:', error);\r\n        setErrorFields({\r\n            email: 'Error checking email. Please try again.',\r\n            mobile_no: 'Error checking mobile number. Please try again.'\r\n        });\r\n    }\r\n}, 300);\r\n\r\n    function validatePassword(password) {\r\n        const minLength = 8;\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasSpecialCharacter = /[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);\r\n    \r\n        let errorMessages = [];\r\n    \r\n        if (password.length < minLength) {\r\n            errorMessages.push('Password must be at least 8 characters long.');\r\n        }\r\n        if (!hasUppercase) {\r\n            errorMessages.push('Password must contain at least one uppercase letter.');\r\n        }\r\n        if (!hasLowercase) {\r\n            errorMessages.push('Password must contain at least one lowercase letter.');\r\n        }\r\n        if (!hasSpecialCharacter) {\r\n            errorMessages.push('Password must contain at least one special character.');\r\n        }\r\n    \r\n        return errorMessages;\r\n    }\r\n\r\n    // Handle input change events\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: value,\r\n        }));\r\n    \r\n        // Handle real-time username availability check\r\n        if (name === 'username') {\r\n            debouncedCheckEducatorUsernameAvailability(value);\r\n        }\r\n    \r\n        // Trigger password validation when password changes\r\n        if (name === 'password') {\r\n            const errors = validatePassword(value);\r\n            setPasswordErrors(errors);\r\n        }\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        // Check for password errors\r\n        if (passwordErrors.length > 0) {\r\n            alert('Please fix password errors before submitting.');\r\n            return;\r\n        }\r\n    \r\n        // Extract email and mobile_no from formData\r\n        const { email, mobile_no } = formData;\r\n    \r\n        // Check learner unique fields\r\n        await debouncedCheckEducatorUniqueFields(email, mobile_no);\r\n    \r\n        // If there are any errors in email or mobile_no, display the error messages\r\n        // below the corresponding fields and stop form submission\r\n        if (errorFields.email) {\r\n            alert(errorFields.email); // Alert the error message\r\n            return;\r\n        }\r\n        if (errorFields.mobile_no) {\r\n            alert(errorFields.mobile_no); // Alert the error message\r\n            return;\r\n        }\r\n    \r\n        // If all unique field checks pass, proceed to send OTP\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await api.post('/educator-send-otp/', { email },{headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }});\r\n            alert(response.data.message);\r\n            setOtpSent(true);\r\n        } catch (error) {\r\n            console.error('Error sending OTP:', error);\r\n            alert('Failed to send OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n        // Handle OTP verification\r\n    const handleOTPVerification = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await api.post('/educator-verify-otp/', {\r\n                email: formData.email,\r\n                otp: otp,\r\n            },{headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }});\r\n\r\n            if (response.data.success) {\r\n                setIsOtpVerified(true);\r\n                alert('OTP verified successfully!');\r\n                // Proceed to learner signup\r\n                await handleEducatorSignup();\r\n            } else {\r\n                alert('Incorrect OTP. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error verifying OTP:', error);\r\n            alert('Error verifying OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await api.post('/educator-send-otp/', {\r\n                email: formData.email, headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                }\r\n            });\r\n            alert(response.data.message);\r\n            setOtpSent(true);\r\n            setOtp(''); // Clear OTP input\r\n        } catch (error) {\r\n            console.error('Error sending OTP:', error);\r\n            alert('Failed to send OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle learner sign-up\r\n    const handleEducatorSignup = async () => {\r\n        try {\r\n            // Prepare data to send\r\n            const dataToSend = {\r\n                ...formData,\r\n                otp: otp,\r\n            };\r\n\r\n            // Make a POST request to the learner signup endpoint\r\n            const response = await api.post('/educator-signup/', dataToSend, {headers: {\r\n                'X-CSRFToken': csrfToken,\r\n        }});\r\n\r\n            // Handle the response\r\n            if (response.status === 201) {\r\n                alert('Educator signed up successfully!');\r\n                // Perform any other navigation or state updates as needed\r\n            } else {\r\n                alert(`Error: ${response.data.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during signup:', error);\r\n            alert('Error during signup. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container4\">\r\n            <h2>Educator Sign Up</h2>\r\n            {isLoading && <p>Loading...</p>}\r\n            {!isOtpVerified ? (\r\n                <>\r\n                    {otpSent ? (\r\n                        <form onSubmit={handleOTPVerification}>\r\n                            <label>Enter OTP</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                required\r\n                            />\r\n                            <input type=\"submit\" value=\"Verify OTP\" />\r\n                            <button type=\"button\" onClick={handleResendOTP}>\r\n                                Resend OTP\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <form onSubmit={handleSubmit}>\r\n                        \r\n                            <label>Full Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"e.g. Thomas Alva Edison\"\r\n                                value={formData.name}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                value={formData.dob}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Highest Qualification</label>\r\n                            <select\r\n                                name=\"highest_qualification\"\r\n                                value={formData.highest_qualification}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    Select your qualification\r\n                                </option>\r\n                                <option value=\"B.A.\">Bachelor of Arts (B.A.)</option>\r\n                                <option value=\"B.Sc.\">Bachelor of Science (B.Sc.)</option>\r\n                                <option value=\"B.Com\">Bachelor of Commerce (B.Com)</option>\r\n                                <option value=\"B.E.\">Bachelor of Engineering (B.E.)</option>\r\n                                <option value=\"B.Tech\">Bachelor of Technology (B.Tech)</option>\r\n                                <option value=\"B.Pharm\">Bachelor of Pharmacy (B.Pharm)</option>\r\n                                <option value=\"B.Arch\">Bachelor of Architecture (B.Arch)</option>\r\n                                <option value=\"BBA\">Bachelor of Business Administration (BBA)</option>\r\n                                <option value=\"BCA\">Bachelor of Computer Applications (BCA)</option>\r\n                                <option value=\"MBBS\">Bachelor of Medicine, Bachelor of Surgery (MBBS)</option>\r\n                                <option value=\"BDS\">Bachelor of Dental Surgery (BDS)</option>\r\n                                <option value=\"B.V.Sc.\">Bachelor of Veterinary Science (B.V.Sc.)</option>\r\n                                <option value=\"LL.B\">Bachelor of Laws (LL.B)</option>\r\n                                <option value=\"M.A.\">Master of Arts (M.A.)</option>\r\n                                <option value=\"M.Sc.\">Master of Science (M.Sc.)</option>\r\n                                <option value=\"M.Com\">Master of Commerce (M.Com)</option>\r\n                                <option value=\"M.E.\">Master of Engineering (M.E.)</option>\r\n                                <option value=\"M.Tech\">Master of Technology (M.Tech)</option>\r\n                                <option value=\"MBA\">Master of Business Administration (MBA)</option>\r\n                                <option value=\"MCA\">Master of Computer Applications (MCA)</option>\r\n                                <option value=\"MD\">Doctor of Medicine (MD)</option>\r\n                                <option value=\"MS\">Master of Surgery (MS)</option>\r\n                                <option value=\"M.Pharm\">Master of Pharmacy (M.Pharm)</option>\r\n                                <option value=\"LL.M\">Master of Laws (LL.M)</option>\r\n                                <option value=\"Ph.D\">Doctor of Philosophy (Ph.D)</option>\r\n                            </select>\r\n                            <br></br>\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleInputChange}\r\n                                onSubmit={handleSubmit}\r\n                                required\r\n                            />\r\n                            {errorFields.email && <span style={{ color: 'red' }}>{errorFields.email}</span>}\r\n                            <br />\r\n\r\n                            <label>Mobile No</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"mobile_no\"\r\n                                value={formData.mobile_no}\r\n                                onChange={handleInputChange}\r\n                                onSubmit={handleSubmit}\r\n                                required\r\n                            />\r\n                            {errorFields.mobile_no && <span style={{ color: 'red' }}>{errorFields.mobile_no}</span>}\r\n                            <br />\r\n\r\n                            <label>Username</label>\r\n                            <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            />\r\n                            {errorFields.username && <span style={{ color: 'red' }}>{errorFields.username}</span>}\r\n{usernameAvailable && (\r\n    <p style={{ color: 'green' }}>Username is available.</p>\r\n)}\r\n{usernameAvailable === false && !errorFields.username && (\r\n    <p style={{ color: 'red' }}>Username is unavailable.</p>\r\n)}\r\n                            <br />\r\n\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            {passwordErrors.map((error, index) => (\r\n                                <p key={index} style={{ color: 'red' }}>\r\n                                    {error}\r\n                                </p>\r\n                            ))}\r\n                            <br />\r\n\r\n                            <input type=\"submit\" value=\"Sign Up\" />\r\n                        </form>\r\n                    )}\r\n                    <a href=\"/educator-signin\">Already have an Account? Sign In</a>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <p>OTP verified successfully! Proceed with the next steps.</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default EducatorSignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}