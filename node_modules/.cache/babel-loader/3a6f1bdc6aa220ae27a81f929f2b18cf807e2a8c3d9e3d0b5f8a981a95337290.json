{"ast":null,"code":"//react-project/src/api.js\nimport axios from 'axios';\nexport const fetchLearnerSessionData = async () => {\n  try {\n    const response = await api.get('/fetch-learner-session-data/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching session data:', error);\n    return null;\n  }\n};\nexport const fetchEducatorSessionData = async () => {\n  try {\n    const response = await api.get('/fetch-educator-session-data/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching session data:', error);\n    return null;\n  }\n};\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api',\n  // Updated base URL with /api for routes\n  timeout: 2 * 60 * 1000,\n  // 10-second timeout for requests\n  withCredentials: true\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  // Modify request config here if needed\n  return config;\n}, error => {\n  // Handle request errors\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => {\n  // Transform response data here if needed\n  return response;\n}, error => {\n  // Handle response errors\n  if (error.response) {\n    // Server responded with a status other than 2xx\n    console.error(`API Error: ${error.response.status} - ${error.response.data}`);\n  } else if (error.request) {\n    // No response received\n    console.error('API Error: No response received');\n  } else {\n    // Error setting up request\n    console.error(`API Error: ${error.message}`);\n  }\n  return Promise.reject(error);\n});\nfunction getCSRFToken() {\n  const name = 'csrftoken';\n  const value = '; ' + document.cookie;\n  const parts = value.split('; ' + name + '=');\n  if (parts.length === 2) {\n    return parts.pop().split(';').shift();\n  }\n}\n\n// Fetch the CSRF token\nconst csrfToken = getCSRFToken();\n\n// Make an API request with CSRF token in headers\naxios.post('/api/check-username-availability/', {\n  username: formData.username\n}, {\n  headers: {\n    'X-CSRFToken': csrfToken\n  }\n}).then(response => {\n  // Handle the response\n}).catch(error => {\n  // Handle the error\n});\nexport default api;","map":{"version":3,"names":["axios","fetchLearnerSessionData","response","api","get","data","error","console","fetchEducatorSessionData","create","baseURL","timeout","withCredentials","interceptors","request","use","config","Promise","reject","status","message","getCSRFToken","name","value","document","cookie","parts","split","length","pop","shift","csrfToken","post","username","formData","headers","then","catch"],"sources":["D:/Sugu/Code/Projects/Project EduGate/react-project/src/api.js"],"sourcesContent":["//react-project/src/api.js\r\nimport axios from 'axios';\r\n\r\nexport const fetchLearnerSessionData = async () => {\r\n    try {\r\n        const response = await api.get('/fetch-learner-session-data/');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching session data:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const fetchEducatorSessionData = async () => {\r\n    try {\r\n        const response = await api.get('/fetch-educator-session-data/');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching session data:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/api', // Updated base URL with /api for routes\r\n    timeout: 2*60*1000, // 10-second timeout for requests\r\n    withCredentials: true,\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        // Modify request config here if needed\r\n        return config;\r\n    },\r\n    (error) => {\r\n        // Handle request errors\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(\r\n    (response) => {\r\n        // Transform response data here if needed\r\n        return response;\r\n    },\r\n    (error) => {\r\n        // Handle response errors\r\n        if (error.response) {\r\n            // Server responded with a status other than 2xx\r\n            console.error(`API Error: ${error.response.status} - ${error.response.data}`);\r\n        } else if (error.request) {\r\n            // No response received\r\n            console.error('API Error: No response received');\r\n        } else {\r\n            // Error setting up request\r\n            console.error(`API Error: ${error.message}`);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n\r\nfunction getCSRFToken() {\r\n    const name = 'csrftoken';\r\n    const value = '; ' + document.cookie;\r\n    const parts = value.split('; ' + name + '=');\r\n    if (parts.length === 2) {\r\n        return parts.pop().split(';').shift();\r\n    }\r\n}\r\n\r\n// Fetch the CSRF token\r\nconst csrfToken = getCSRFToken();\r\n\r\n// Make an API request with CSRF token in headers\r\naxios.post('/api/check-username-availability/', {\r\n    username: formData.username,\r\n}, {\r\n    headers: {\r\n        'X-CSRFToken': csrfToken,\r\n    }\r\n})\r\n.then(response => {\r\n    // Handle the response\r\n})\r\n.catch(error => {\r\n    // Handle the error\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC9D,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAME,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC/D,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAMH,GAAG,GAAGH,KAAK,CAACS,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE,CAAC,GAAC,EAAE,GAAC,IAAI;EAAE;EACpBC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACAT,GAAG,CAACU,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR;EACA,OAAOA,MAAM;AACjB,CAAC,EACAV,KAAK,IAAK;EACP;EACA,OAAOW,OAAO,CAACC,MAAM,CAACZ,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAH,GAAG,CAACU,YAAY,CAACX,QAAQ,CAACa,GAAG,CACxBb,QAAQ,IAAK;EACV;EACA,OAAOA,QAAQ;AACnB,CAAC,EACAI,KAAK,IAAK;EACP;EACA,IAAIA,KAAK,CAACJ,QAAQ,EAAE;IAChB;IACAK,OAAO,CAACD,KAAK,CAAE,cAAaA,KAAK,CAACJ,QAAQ,CAACiB,MAAO,MAAKb,KAAK,CAACJ,QAAQ,CAACG,IAAK,EAAC,CAAC;EACjF,CAAC,MAAM,IAAIC,KAAK,CAACQ,OAAO,EAAE;IACtB;IACAP,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;EACpD,CAAC,MAAM;IACH;IACAC,OAAO,CAACD,KAAK,CAAE,cAAaA,KAAK,CAACc,OAAQ,EAAC,CAAC;EAChD;EACA,OAAOH,OAAO,CAACC,MAAM,CAACZ,KAAK,CAAC;AAChC,CACJ,CAAC;AAGD,SAASe,YAAYA,CAAA,EAAG;EACpB,MAAMC,IAAI,GAAG,WAAW;EACxB,MAAMC,KAAK,GAAG,IAAI,GAAGC,QAAQ,CAACC,MAAM;EACpC,MAAMC,KAAK,GAAGH,KAAK,CAACI,KAAK,CAAC,IAAI,GAAGL,IAAI,GAAG,GAAG,CAAC;EAC5C,IAAII,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IACpB,OAAOF,KAAK,CAACG,GAAG,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC;EACzC;AACJ;;AAEA;AACA,MAAMC,SAAS,GAAGV,YAAY,CAAC,CAAC;;AAEhC;AACArB,KAAK,CAACgC,IAAI,CAAC,mCAAmC,EAAE;EAC5CC,QAAQ,EAAEC,QAAQ,CAACD;AACvB,CAAC,EAAE;EACCE,OAAO,EAAE;IACL,aAAa,EAAEJ;EACnB;AACJ,CAAC,CAAC,CACDK,IAAI,CAAClC,QAAQ,IAAI;EACd;AAAA,CACH,CAAC,CACDmC,KAAK,CAAC/B,KAAK,IAAI;EACZ;AAAA,CACH,CAAC;AAEF,eAAeH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}