{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./EducatorSignUp.css';import api from'./api';import{debounce}from'lodash';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function EducatorSignUp(){const[formData,setFormData]=useState({name:'',dob:'',highest_qualification:'',email:'',mobile_no:'',username:'',password:'',bio:'',profile_picture:''});const[otp,setOtp]=useState('');const[otpSent,setOtpSent]=useState(false);const[isOtpVerified,setIsOtpVerified]=useState(false);const[isLoading,setIsLoading]=useState(false);const[errorFields,setErrorFields]=useState({email:'',username:''});const[passwordErrors,setPasswordErrors]=useState([]);const[usernameAvailable,setUsernameAvailable]=useState(null);const[csrfToken,setCsrfToken]=useState('');useEffect(()=>{async function fetchCsrfToken(){try{const response=await api.get('/get-learner-csrf-token/');setCsrfToken(response.data.csrfToken);}catch(error){console.error('Error fetching CSRF token:',error);}}fetchCsrfToken();},[]);const debouncedCheckEducatorUsernameAvailability=debounce(async username=>{if(!username){setUsernameAvailable(null);setErrorFields(prevFields=>({...prevFields,username:'Username cannot be empty.'}));return;}try{const response=await api.post('/check-educator-username-availability/',{username,headers:{'X-CSRFToken':csrfToken}});const isUnique=response.data.username.is_unique;setUsernameAvailable(isUnique);if(isUnique){setErrorFields(prevFields=>({...prevFields,username:''}));}else{setErrorFields(prevFields=>({...prevFields,username:'Username is already taken, Choose another username'}));}}catch(error){console.error('Error checking username:',error);setErrorFields(prevFields=>({...prevFields,username:'Error checking username. Please try again.'}));setUsernameAvailable(false);}},300);const debouncedCheckEducatorUniqueFields=debounce(async email=>{try{const response=await api.post('/check-educator-unique-fields/',{email,headers:{'X-CSRFToken':csrfToken}});if(!response.data.success){setErrorFields({email:response.data.message});}else{setErrorFields({});}if(response.data.success){try{const response=await api.post('/educator-send-otp/',{email},{headers:{'X-CSRFToken':csrfToken}});alert(response.data.message);setOtpSent(true);}catch(error){console.error('Error sending OTP:',error);alert('Failed to send OTP. Please try again.');}finally{setIsLoading(false);}}}catch(error){console.error('Error checking unique fields:',error);setErrorFields({email:'Error checking email. Please try again.'});}},300);function validatePassword(password){const minLength=8;const hasUppercase=/[A-Z]/.test(password);const hasLowercase=/[a-z]/.test(password);const hasSpecialCharacter=/[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);let errorMessages=[];if(password.length<minLength){errorMessages.push('Password must be at least 8 characters long.');}if(!hasUppercase){errorMessages.push('Password must contain at least one uppercase letter.');}if(!hasLowercase){errorMessages.push('Password must contain at least one lowercase letter.');}if(!hasSpecialCharacter){errorMessages.push('Password must contain at least one special character.');}return errorMessages;}const handleInputChange=e=>{const{name,value,type,files}=e.target;if(type==='file'){setFormData(prevFormData=>({...prevFormData,[name]:files[0]}));}else{setFormData(prevFormData=>({...prevFormData,[name]:value}));}if(name==='username'){debouncedCheckEducatorUsernameAvailability(value);}if(name==='password'){const errors=validatePassword(value);setPasswordErrors(errors);}};const handleSubmit=async e=>{e.preventDefault();if(passwordErrors.length>0){alert('Please fix password errors before submitting.');return;}const{email}=formData;await debouncedCheckEducatorUniqueFields(email);setIsLoading(true);};const handleOTPVerification=async e=>{e.preventDefault();setIsLoading(true);try{const response=await api.post('/educator-verify-otp/',{email:formData.email,otp:otp},{headers:{'X-CSRFToken':csrfToken}});if(response.data.success){setIsOtpVerified(true);alert('OTP verified successfully!');await handleEducatorSignup();}else{alert('Incorrect OTP. Please try again.');}}catch(error){console.error('Error verifying OTP:',error);alert('Error verifying OTP. Please try again.');}finally{setIsLoading(false);}};const handleResendOTP=async()=>{setIsLoading(true);try{const response=await api.post('/educator-send-otp/',{email:formData.email,headers:{'X-CSRFToken':csrfToken}});alert(response.data.message);setOtpSent(true);setOtp('');}catch(error){console.error('Error sending OTP:',error);alert('Failed to send OTP. Please try again.');}finally{setIsLoading(false);}};const handleEducatorSignup=async()=>{try{const dataToSend={...formData,otp:otp};const response=await api.post('/educator-signup/',dataToSend,{headers:{'Content-Type':'multipart/form-data','X-CSRFToken':csrfToken}});if(response.status===201){alert('Educator signed up successfully!');}else{alert(`Error: ${response.data.message}`);}}catch(error){console.error('Error during signup:',error);alert('Error during signup. Please try again.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"educator-component-background\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container2\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Educator Sign Up\"}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),!isOtpVerified?/*#__PURE__*/_jsxs(_Fragment,{children:[otpSent?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleOTPVerification,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter OTP\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Verify OTP\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleResendOTP,children:\"Resend OTP\"})]}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,encType:\"multipart/form-data\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"e.g. Thomas Alva Edison\",value:formData.name,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Date of Birth\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"dob\",value:formData.dob,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Profile Picture\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"profile_picture\",accept:\"image/*\",onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Highest Qualification\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"highest_qualification\",value:formData.highest_qualification,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select your qualification\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.A.\",children:\"Bachelor of Arts (B.A.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Sc.\",children:\"Bachelor of Science (B.Sc.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Com\",children:\"Bachelor of Commerce (B.Com)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.E.\",children:\"Bachelor of Engineering (B.E.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Tech\",children:\"Bachelor of Technology (B.Tech)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Pharm\",children:\"Bachelor of Pharmacy (B.Pharm)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.Arch\",children:\"Bachelor of Architecture (B.Arch)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BBA\",children:\"Bachelor of Business Administration (BBA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BCA\",children:\"Bachelor of Computer Applications (BCA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MBBS\",children:\"Bachelor of Medicine, Bachelor of Surgery (MBBS)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BDS\",children:\"Bachelor of Dental Surgery (BDS)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B.V.Sc.\",children:\"Bachelor of Veterinary Science (B.V.Sc.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LL.B\",children:\"Bachelor of Laws (LL.B)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.A.\",children:\"Master of Arts (M.A.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Sc.\",children:\"Master of Science (M.Sc.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Com\",children:\"Master of Commerce (M.Com)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.E.\",children:\"Master of Engineering (M.E.)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Tech\",children:\"Master of Technology (M.Tech)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MBA\",children:\"Master of Business Administration (MBA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MCA\",children:\"Master of Computer Applications (MCA)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MD\",children:\"Doctor of Medicine (MD)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MS\",children:\"Master of Surgery (MS)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M.Pharm\",children:\"Master of Pharmacy (M.Pharm)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LL.M\",children:\"Master of Laws (LL.M)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ph.D\",children:\"Doctor of Philosophy (Ph.D)\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",value:formData.email,onChange:handleInputChange,onSubmit:handleSubmit,required:true}),errorFields.email&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errorFields.email}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Mobile No\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"mobile_no\",value:formData.mobile_no,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:formData.username,onChange:handleInputChange,required:true}),errorFields.username&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:errorFields.username}),usernameAvailable&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:\"Username is available\"}),usernameAvailable===false&&!errorFields.username&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,required:true}),passwordErrors.map((error,index)=>/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error},index)),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Bio\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"bio\",value:formData.bio,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Sign Up\"})]}),/*#__PURE__*/_jsx(\"a\",{href:\"/educator-signin\",children:\"Already have an Account? Sign In\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"OTP verified and Educator Signed Upsuccessfully! Proceed with the next steps.\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/educator-signin\",children:\"Sign In Now\"})]})]})});}export default EducatorSignUp;","map":{"version":3,"names":["React","useState","useEffect","api","debounce","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EducatorSignUp","formData","setFormData","name","dob","highest_qualification","email","mobile_no","username","password","bio","profile_picture","otp","setOtp","otpSent","setOtpSent","isOtpVerified","setIsOtpVerified","isLoading","setIsLoading","errorFields","setErrorFields","passwordErrors","setPasswordErrors","usernameAvailable","setUsernameAvailable","csrfToken","setCsrfToken","fetchCsrfToken","response","get","data","error","console","debouncedCheckEducatorUsernameAvailability","prevFields","post","headers","isUnique","is_unique","debouncedCheckEducatorUniqueFields","success","message","alert","validatePassword","minLength","hasUppercase","test","hasLowercase","hasSpecialCharacter","errorMessages","length","push","handleInputChange","e","value","type","files","target","prevFormData","errors","handleSubmit","preventDefault","handleOTPVerification","handleEducatorSignup","handleResendOTP","dataToSend","status","className","children","onSubmit","onChange","required","onClick","encType","placeholder","accept","disabled","style","color","map","index","href"],"sources":["D:/Sugu/Study Zone/Coding/Code/Projects/Coapps/Final Project/Project EduGate/react-project/src/EducatorSignUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './EducatorSignUp.css';\r\nimport api from './api';\r\nimport { debounce } from 'lodash';\r\n\r\n    function EducatorSignUp() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        dob: '',\r\n        highest_qualification: '',\r\n        email: '',\r\n        mobile_no: '',\r\n        username: '',\r\n        password: '',\r\n        bio: '',\r\n        profile_picture:'',\r\n    });\r\n\r\n    const [otp, setOtp] = useState('');\r\n    const [otpSent, setOtpSent] = useState(false);\r\n    const [isOtpVerified, setIsOtpVerified] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorFields, setErrorFields] = useState({\r\n        email: '',\r\n        username: '',\r\n    });\r\n    \r\n    const [passwordErrors, setPasswordErrors] = useState([]);\r\n    const [usernameAvailable, setUsernameAvailable] = useState(null);\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\nuseEffect(() => {\r\n    async function fetchCsrfToken() {\r\n        try {\r\n            const response = await api.get('/get-learner-csrf-token/');\r\n            setCsrfToken(response.data.csrfToken);\r\n        } catch (error) {\r\n            console.error('Error fetching CSRF token:', error);\r\n        }\r\n    }\r\n\r\n    fetchCsrfToken();\r\n}, []);\r\n\r\nconst debouncedCheckEducatorUsernameAvailability = debounce(async (username) => {\r\n    if (!username) {\r\n        setUsernameAvailable(null);\r\n        setErrorFields((prevFields) => ({\r\n            ...prevFields,\r\n            username: 'Username cannot be empty.',\r\n        }));\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await api.post('/check-educator-username-availability/', {\r\n            username, headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }\r\n        });\r\n\r\n        const isUnique = response.data.username.is_unique;\r\n        setUsernameAvailable(isUnique);\r\n\r\n        if (isUnique) {\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username: '',\r\n            }));\r\n        } else {\r\n            setErrorFields((prevFields) => ({\r\n                ...prevFields,\r\n                username:'Username is already taken, Choose another username',\r\n            }));\r\n        }\r\n        \r\n    } catch (error) {\r\n\r\n        console.error('Error checking username:', error);\r\n        setErrorFields((prevFields) => ({\r\n            ...prevFields,\r\n            username: 'Error checking username. Please try again.',\r\n        }));\r\n        setUsernameAvailable(false);\r\n    }\r\n}, 300);\r\n\r\nconst debouncedCheckEducatorUniqueFields = debounce(async (email) => {\r\n    try {\r\n        const response = await api.post('/check-educator-unique-fields/', \r\n        {email\r\n        ,headers: {\r\n            'X-CSRFToken': csrfToken,\r\n        }}\r\n    );   \r\n\r\n        if (!response.data.success) {    \r\n            setErrorFields({\r\n            email: response.data.message,\r\n            });  \r\n\r\n        }\r\n        else {\r\n            setErrorFields({});\r\n        }\r\n\r\n        if(response.data.success){\r\n\r\n            try {\r\n                const response = await api.post('/educator-send-otp/', { email },{headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                }});\r\n                alert(response.data.message);\r\n                setOtpSent(true);\r\n            } catch (error) {\r\n                console.error('Error sending OTP:', error);\r\n                alert('Failed to send OTP. Please try again.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }          \r\n        }\r\n\r\n\r\n    } catch (error) {\r\n        console.error('Error checking unique fields:', error);\r\n        setErrorFields({\r\n            email: 'Error checking email. Please try again.',\r\n        });\r\n    }\r\n}, 300);\r\n\r\n    function validatePassword(password) {\r\n        const minLength = 8;\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasSpecialCharacter = /[!@#$%^&*()-_=+[\\]{};':\"\\\\|,.<>/?~`]/.test(password);\r\n    \r\n        let errorMessages = [];\r\n    \r\n        if (password.length < minLength) {\r\n            errorMessages.push('Password must be at least 8 characters long.');\r\n        }\r\n        if (!hasUppercase) {\r\n            errorMessages.push('Password must contain at least one uppercase letter.');\r\n        }\r\n        if (!hasLowercase) {\r\n            errorMessages.push('Password must contain at least one lowercase letter.');\r\n        }\r\n        if (!hasSpecialCharacter) {\r\n            errorMessages.push('Password must contain at least one special character.');\r\n        }\r\n    \r\n        return errorMessages;\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type, files } = e.target;\r\n        if (type === 'file') {\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [name]: files[0], \r\n            }));\r\n        } else {\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [name]: value,\r\n            }));\r\n        }\r\n\r\n        if (name === 'username') {\r\n            debouncedCheckEducatorUsernameAvailability(value);\r\n        }\r\n\r\n        if (name === 'password') {\r\n            const errors = validatePassword(value);\r\n            setPasswordErrors(errors);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n\r\n        if (passwordErrors.length > 0) {\r\n            alert('Please fix password errors before submitting.');\r\n            return;\r\n        }\r\n    \r\n\r\n        const { email} = formData;\r\n    \r\n\r\n        await debouncedCheckEducatorUniqueFields(email);\r\n\r\n    \r\n        setIsLoading(true);\r\n        \r\n    };\r\n    \r\n    \r\n    const handleOTPVerification = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await api.post('/educator-verify-otp/', {\r\n                email: formData.email,\r\n                otp: otp,\r\n            },{headers: {\r\n                'X-CSRFToken': csrfToken,\r\n            }});\r\n\r\n            if (response.data.success) {\r\n                setIsOtpVerified(true);\r\n                alert('OTP verified successfully!');\r\n                await handleEducatorSignup();\r\n            } else {\r\n                alert('Incorrect OTP. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error verifying OTP:', error);\r\n            alert('Error verifying OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await api.post('/educator-send-otp/', {\r\n                email: formData.email, headers: {\r\n                    'X-CSRFToken': csrfToken,\r\n                }\r\n            });\r\n            alert(response.data.message);\r\n            setOtpSent(true);\r\n            setOtp(''); \r\n        } catch (error) {\r\n            console.error('Error sending OTP:', error);\r\n            alert('Failed to send OTP. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEducatorSignup = async () => {\r\n        try {\r\n            const dataToSend = {\r\n                ...formData,\r\n                otp: otp,\r\n            };\r\n\r\n            const response = await api.post('/educator-signup/', dataToSend, {headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'X-CSRFToken': csrfToken,\r\n        }});\r\n\r\n            if (response.status === 201) {\r\n                alert('Educator signed up successfully!');\r\n            } else {\r\n                alert(`Error: ${response.data.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during signup:', error);\r\n            alert('Error during signup. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"educator-component-background\">\r\n            <div className=\"container2\">\r\n            <h2>Educator Sign Up</h2>\r\n            {isLoading && <p>Loading...</p>}\r\n            {!isOtpVerified ? (\r\n                <>\r\n                    {otpSent ? (\r\n                        <form onSubmit={handleOTPVerification}>\r\n                            <label>Enter OTP</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                required\r\n                            />\r\n                            <input type=\"submit\" value=\"Verify OTP\" />\r\n                            <button type=\"button\" onClick={handleResendOTP}>\r\n                                Resend OTP\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                        \r\n                            <label>Full Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"e.g. Thomas Alva Edison\"\r\n                                value={formData.name}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                value={formData.dob}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <br />\r\n\r\n                            <label>Profile Picture</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"profile_picture\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            /><br></br>\r\n\r\n                            <label>Highest Qualification</label>\r\n                            <select\r\n                                name=\"highest_qualification\"\r\n                                value={formData.highest_qualification}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    Select your qualification\r\n                                </option>\r\n                                <option value=\"B.A.\">Bachelor of Arts (B.A.)</option>\r\n                                <option value=\"B.Sc.\">Bachelor of Science (B.Sc.)</option>\r\n                                <option value=\"B.Com\">Bachelor of Commerce (B.Com)</option>\r\n                                <option value=\"B.E.\">Bachelor of Engineering (B.E.)</option>\r\n                                <option value=\"B.Tech\">Bachelor of Technology (B.Tech)</option>\r\n                                <option value=\"B.Pharm\">Bachelor of Pharmacy (B.Pharm)</option>\r\n                                <option value=\"B.Arch\">Bachelor of Architecture (B.Arch)</option>\r\n                                <option value=\"BBA\">Bachelor of Business Administration (BBA)</option>\r\n                                <option value=\"BCA\">Bachelor of Computer Applications (BCA)</option>\r\n                                <option value=\"MBBS\">Bachelor of Medicine, Bachelor of Surgery (MBBS)</option>\r\n                                <option value=\"BDS\">Bachelor of Dental Surgery (BDS)</option>\r\n                                <option value=\"B.V.Sc.\">Bachelor of Veterinary Science (B.V.Sc.)</option>\r\n                                <option value=\"LL.B\">Bachelor of Laws (LL.B)</option>\r\n                                <option value=\"M.A.\">Master of Arts (M.A.)</option>\r\n                                <option value=\"M.Sc.\">Master of Science (M.Sc.)</option>\r\n                                <option value=\"M.Com\">Master of Commerce (M.Com)</option>\r\n                                <option value=\"M.E.\">Master of Engineering (M.E.)</option>\r\n                                <option value=\"M.Tech\">Master of Technology (M.Tech)</option>\r\n                                <option value=\"MBA\">Master of Business Administration (MBA)</option>\r\n                                <option value=\"MCA\">Master of Computer Applications (MCA)</option>\r\n                                <option value=\"MD\">Doctor of Medicine (MD)</option>\r\n                                <option value=\"MS\">Master of Surgery (MS)</option>\r\n                                <option value=\"M.Pharm\">Master of Pharmacy (M.Pharm)</option>\r\n                                <option value=\"LL.M\">Master of Laws (LL.M)</option>\r\n                                <option value=\"Ph.D\">Doctor of Philosophy (Ph.D)</option>\r\n                            </select>\r\n                            <br></br>\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleInputChange}\r\n                                onSubmit={handleSubmit}\r\n                                required\r\n                            />\r\n                            {errorFields.email && <span style={{ color: 'red' }}>{errorFields.email}</span>}\r\n                            <br />\r\n\r\n                            <label>Mobile No</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"mobile_no\"\r\n                                value={formData.mobile_no}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <label>Username</label>\r\n                            <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            />\r\n                            {errorFields.username && <span style={{ color: 'red' }}>{errorFields.username}</span>}\r\n{usernameAvailable && (\r\n    <p style={{ color: 'green' }}>Username is available</p>\r\n)}\r\n{usernameAvailable === false && !errorFields.username && (\r\n    <p style={{ color: 'red' }}></p>\r\n)}\r\n                            <br />\r\n\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            {passwordErrors.map((error, index) => (\r\n                                <p key={index} style={{ color: 'red' }}>\r\n                                    {error}\r\n                                </p>\r\n                            ))}\r\n                            <br />\r\n\r\n                            <label>Bio</label>\r\n                            <textarea\r\n                               name=\"bio\"\r\n                               value={formData.bio}\r\n                               onChange={handleInputChange}\r\n                               required\r\n                            />\r\n\r\n                            <input type=\"submit\" value=\"Sign Up\" />\r\n                        </form>\r\n                    )}\r\n                    <a href=\"/educator-signin\">Already have an Account? Sign In</a>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <p>OTP verified and Educator Signed Upsuccessfully! Proceed with the next steps.</p>\r\n                    <a href=\"/educator-signin\">Sign In Now</a>\r\n\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default EducatorSignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}